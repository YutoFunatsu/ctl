%   内容：仮の同定モデルから同定対象を一次遅れ＋無駄時間で近似したときの無駄時間と1次遅れ系の連続での伝達関数を求める
%
%   注意事項：無駄時間は０となるデータから有意なインパルス応答の立ち上がりの【！！！間に！！！】ある可能性が高い点に気をつける事
%
%   引数:
%       1.preIdentifiedModel
%           型：tf
%           内容：[ND]事前に同定された仮の離散時間？同定モデル
%       2.idEstemateData
%           型：iddata
%           内容：[対象による]引数1.を推定するために使用したデータセット,推定と評価で同定用データを分割してる場合、推定用のデータのみか入ることを想定
%       3.stedyGain
%           型：スカラー
%           内容：事前に求めたゲイン
%       4.wasteTime
%           型：スカラー
%           内容：[s]事前に求めた無駄時間
%
%   戻り値:
%       1.wasteTime
%           型：スカラー
%           内容：[s]推定したインパルス応答のグラフを元に人間が判断した無駄時間
%       2.stedyGain
%           型：スカラー
%           内容:[ND]推定したインパルス応答のグラフを元に人間が判断した定常ゲイン
%       2.estimated1stDelayWasteTF
%           型：tf
%           内容:無駄時間＋1次遅れ系で推定された結果の伝達関数
%
%   作成者：船津優斗
%   作成日：2021/4/1                                                        
%                                                                          
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 

function [ wasteTime , stedyGain ,estimated1stDelayWasteTF] = estimateWestTime1stDelayTF(preIdentifiedModel,idEstemateData,stedyGain,wasteTime)

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 異常時の処理 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    % 【todo】無駄時間が負となり、厳密にプロパーになりえない因果律（未来の値が過去の値に影響を及ぼす）時は処理を中止するガード節を書く
    %if wasteTime < 0 || preIdentifiedModel < 0
        
      %  fprintf('入力された無駄時間が負です。物理的にあり得ないので推定を中止します。事前同定モデルの結果を見直して下さい。\n');
        
        % 無駄時間の推定結果を明らかなエラーの値を返す事でこの関数を呼ぶときに失敗と気づかせるために代入
      %  estimated1stDlayTF = -1;
      %  estimatedWasteTime = -1;
        
      %  return;
        
   % end
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 以下正常時の処理 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
        
    %% 事前のシステム同定結果から無駄時間の推定
    
    % インパルス応答表示用figオブジェクトの作成
    figure('Name','仮同定済みモデルの無駄時間評価用インパルス応答');

    % 無駄時間を推定する為にインパルス応答を推定
    identifiedModelImpulse = impulseest(idEstemateData);
    
    % 標準偏差の3倍の99.73%信頼区間から無駄時間を推定するためにインパルス応答の表示
    impulse(identifiedModelImpulse,'sd',3)
    
    % 可視性向上の為にグリッドを追記
    grid on 
    
    % コマンドウィンドウへの動作状況の表示
    fprintf("同定モデルの推定インパルス応答を表示しました。\n");
      
    % 推定したステップ応答の結果より無駄時間と定常ゲインを入力。無駄時間、定常ゲインは推定インパルス応答のグラフから読み取る
    %【！！！　注意　！！！】無駄時間は０となるデータから有意なインパルス応答の立ち上がりの【！！！間に！！！】ある可能性が高い点に気をつける事
    
    wasteTime = 0.03 ;        % [s]無駄時間
    stedyGain = 0.19;         % [ND]定常ゲイン
    
    % 【todo】 ここで無駄時間の最大値を無駄時間の推定結果として返す処理を追加することで結果の解釈を自動化する処理を追加する=
    %estimated1stDlayTF=;
    
    %% 一次遅れ系＋無駄時間で近似した時の時定数を推定
    
    % 推定結果のステップ応答を表示するためのfigオブジェクトを新規作成
    figure('Name','1次遅れ＋無駄時間で推定したステップ応答');

    % 推定した無駄時間を元に予測誤差法で1次遅れ系の伝達関数（連続）をパラメータ推定
    estimated1stDelayWasteTF = pem(idEstemateData,'P1D','kp',stedyGain,'Td',wasteTime,'kp','fix','Td','fix');

    % 推定した1次遅れ伝達関数（と無駄時間）と事前推定結果のステップ応答を比較用に重ねて表示
    step(preIdentifiedModel,estimated1stDelayWasteTF);
    
    % 可視性向上の為にグリッドを追記
    grid on 
    
    % コマンドウィンドウへの動作状況の表示
    fprintf("同定モデルのステップ応答を表示しました。\n");
end
        